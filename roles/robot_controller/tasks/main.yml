# code: language=ansible
---
- name: validate parameters
  ansible.builtin.assert:
    that:
      - robot_controller_user is string
      - robot_controller_user_group is string
      - robot_controller_user_home is string
      - robot_controller_uid is number
      - robot_controller_gid is number
      - robot_controller_authorized_keys is not string
      - robot_controller_authorized_keys is not mapping
      - robot_controller_authorized_keys is iterable
      - robot_controller_user_password is defined
      - robot_controller_deployment_key is defined

- name: validate potentially encrypt variables (may fail)
  ansible.builtin.assert:
    that: robot_controller_user_password is string
  ignore_errors: true

- name: validate potentially encrypt variables (may fail)
  ansible.builtin.assert:
    that: robot_controller_deployment_key is string
  ignore_errors: true

- name: create group
  ansible.builtin.group:
    name: "{{ robot_controller_user_group }}"
    state: present
    gid: "{{ robot_controller_gid }}"

- name: create user
  ansible.builtin.user:
    name: "{{ robot_controller_user }}"
    state: present
    # Hardcode the UID so that we don't have to play UID mapping games between
    # host and container user UIDs
    uid: "{{ robot_controller_uid }}"
    comment: User for running Robot Framework
    password: "{{ robot_controller_user_password | ansible.builtin.password_hash('sha512') }}"
    create_home: true
    home: "{{ robot_controller_user_home }}"
    group: "{{ robot_controller_user_group }}"

- name: create robot ssh directory
  ansible.builtin.file:
    path: "{{ robot_controller_user_home }}/.ssh"
    state: directory
    owner: "{{ robot_controller_user }}"
    group: "{{ robot_controller_user_group }}"
    mode: '0700'

- name: add ssh deployment key
  ansible.builtin.copy:
    content: "{{ robot_controller_deployment_key }}"
    dest: "{{ robot_controller_user_home }}/.ssh/id_rsa"
    owner: "{{ robot_controller_user }}"
    group: "{{ robot_controller_user_group }}"
    mode: '0600'

- name: add ssh authorized keys
  ansible.builtin.lineinfile:
    path: "{{ robot_controller_user_home }}/.ssh/authorized_keys"
    line: "{{ item }}"
    create: true
    owner: "{{ robot_controller_user }}"
    group: "{{ robot_controller_user_group }}"
    mode: '0600'
  loop: "{{ robot_controller_authorized_keys }}"

- name: install podman
  ansible.builtin.dnf:
    name: podman
    state: present

- name: create container build directory
  ansible.builtin.file:
    path: "{{ robot_controller_user_home }}/podman-build"
    state: directory
    owner: "{{ robot_controller_user }}"
    group: "{{ robot_controller_user_group }}"
    mode: '0750'

- name: copy robot containerfile
  ansible.builtin.template:
    src: templates/Containerfile.ubi9.j2
    dest: "{{ robot_controller_user_home }}/podman-build/Containerfile"

- name: build robot image
  containers.podman.podman_image:
    name: robot
    path: "{{ robot_controller_user_home }}/podman-build"
    build:
      format: oci
      cache: "{{ robot_controller_use_podman_cache }}"
